name: Build and Push Docker Image to ECR

inputs:
  repo-name:
    description: "The repository name"
    required: true
  dockerfile-path:
    description: "The Dockerfile path"
    required: true
  environment:
    description: "The environment"
    required: true
  aws-access-key-id:
    description: "AWS Access Key ID"
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key"
    required: true
  aws-region:
    description: "Default Region on AWS"
    default: "ap-northeast-1"
  build-args:
    description: "Docker build args"
    default: ""
  s3-cache-bucket-name:
    description: "AWS S3 bucket name for actions cache"
    default: ""

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Get ECR Registry
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.ecr-login.outputs.registry }}

    - name: Set up Docker Build kit
      uses: docker/setup-buildx-action@v3

    - name: Get short SHA
      id: get-commit-short-sha
      shell: bash
      run: |
        echo "short-commit-sha=$(echo "${{ github.sha }}" | cut -c 1-8)" >> $GITHUB_OUTPUT

    - name: Build and push docker image
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.dockerfile-path }}
        file: ${{ inputs.dockerfile-path }}/Dockerfile
        push: true
        tags: |
          ${{ steps.ecr-login.outputs.registry }}/${{ inputs.repo-name }}:${{ steps.get-commit-short-sha.outputs.short-commit-sha }}-${{ inputs.environment }},
          ${{ steps.ecr-login.outputs.registry }}/${{ inputs.repo-name }}:latest
        provenance: false
        cache-from: type=s3,region=${{ inputs.aws-region }},bucket=${{ inputs.s3-cache-bucket-name }},name=${{ inputs.repo-name }},prefix=blobs/${{ inputs.repo-name }}/
        cache-to: type=s3,region=${{ inputs.aws-region }},bucket=${{ inputs.s3-cache-bucket-name }},name=${{ inputs.repo-name }},prefix=blobs/${{ inputs.repo-name }}/,mode=max
        build-args: |
          RELEASE=${{ steps.get-commit-short-sha.outputs.short-commit-sha }}
          ENVIRONMENT=${{ inputs.environment }}
          SENTRY-DSN=${{ inputs.sentry-dsn }}
          ${{ inputs.build-args }}
